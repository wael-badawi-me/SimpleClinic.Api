// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace SimpleClinic.DataAccess.Models;

public partial class ClinicContext : DbContext
{
    public ClinicContext(DbContextOptions<ClinicContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Clinic> Clinics { get; set; }

    public virtual DbSet<Doctor> Doctors { get; set; }

    public virtual DbSet<DoctorService> DoctorServices { get; set; }

    public virtual DbSet<DoctorServiceClinic> DoctorServiceClinics { get; set; }

    public virtual DbSet<Reservation> Reservations { get; set; }

    public virtual DbSet<Service> Services { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Clinic>(entity =>
        {
            entity.ToTable("Clinic");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Doctor>(entity =>
        {
            entity.ToTable("Doctor");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<DoctorService>(entity =>
        {
            entity.ToTable("DoctorService");

            entity.HasOne(d => d.Doctor).WithMany(p => p.DoctorServices)
                .HasForeignKey(d => d.DoctorId)
                .HasConstraintName("FK_DoctorService_Doctor");

            entity.HasOne(d => d.Service).WithMany(p => p.DoctorServices)
                .HasForeignKey(d => d.ServiceId)
                .HasConstraintName("FK_DoctorService_Service");
        });

        modelBuilder.Entity<DoctorServiceClinic>(entity =>
        {
            entity.ToTable("Doctor_Service_Clinic");

            entity.HasOne(d => d.Clinic).WithMany(p => p.DoctorServiceClinics)
                .HasForeignKey(d => d.ClinicId)
                .HasConstraintName("FK_Doctor_Service_Clinic_Clinic");

            entity.HasOne(d => d.DoctorService).WithMany(p => p.DoctorServiceClinics)
                .HasForeignKey(d => d.DoctorServiceId)
                .HasConstraintName("FK_Doctor_Service_Clinic_DoctorService");
        });

        modelBuilder.Entity<Reservation>(entity =>
        {
            entity.ToTable("Reservation");

            entity.Property(e => e.DoctorServiceClinicId).HasColumnName("Doctor_Service_ClinicId");

            entity.HasOne(d => d.DoctorServiceClinic).WithMany(p => p.Reservations)
                .HasForeignKey(d => d.DoctorServiceClinicId)
                .HasConstraintName("FK_Reservation_Doctor_Service_Clinic");
        });

        modelBuilder.Entity<Service>(entity =>
        {
            entity.ToTable("Service");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}